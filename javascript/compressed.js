class Graph{constructor(){this.nodes=[],this.adjacentList={}}addNode(t){this.nodes.push(t),this.adjacentList[t]=[]}addEdge(t,e,i){let n=this.adjacentList[t].findIndex(t=>t.node===e),s=this.adjacentList[e].findIndex(e=>e.node===t);-1!==n&&-1!==s?(this.adjacentList[t][n]={node:e,weight:i},this.adjacentList[e][s]={node:t,weight:i}):(this.adjacentList[t].push({node:e,weight:i}),this.adjacentList[e].push({node:t,weight:i}))}dijkstra(t,e){if(!this.adjacentList[t].length||!this.adjacentList[e].length)return[["none"],0];let i={},n={},s=new PriorityQueue;for(i[t]=0,this.nodes.forEach(e=>{e!==t&&(i[e]=1/0)}),s.enqueue([t,0]);!s.isEmpty();){let t=s.dequeue()[0];this.adjacentList[t].forEach(e=>{let o=i[t]+e.weight;o<i[e.node]&&(i[e.node]=o,n[e.node]=t,s.enqueue([e.node,o]))})}let o=[e],h=e;for(;h!==t;){if(void 0===h)return[["none"],0];o.unshift(n[h]),h=n[h]}return[o,i[e]]}}class PriorityQueue{constructor(){this.collection=[]}enqueue(t){if(this.isEmpty())this.collection.push(t);else{let e=!1;for(let i=1;i<this.collection.length;++i)if(t[1]<this.collection[i-1][1]){this.collection.splice(i-1,0,t),e=!0;break}e||this.collection.push(t)}}dequeue(){return this.collection.shift()}isEmpty(){return 0===this.collection.length}}const nodePaint=({id:a,x:b,y:c},d,e)=>{e.fillStyle=d,(()=>{e.beginPath(),e.arc(b,c,8,0,4*Math.PI,!1),e.fill(),e.font=`${8}px Sans-Serif`,e.textAlign="center",e.textBaseline="middle",e.fillStyle="white",e.fillText(a,b,c)})()},linkCanvasObject=(a,b)=>{const d=a.source,e=a.target;if("object"!=typeof d||"object"!=typeof e)return;const f=Object.assign(...["x","y"].map(a=>({[a]:d[a]+(e[a]-d[a])/2}))),g={x:e.x-d.x,y:e.y-d.y},h=Math.sqrt(Math.pow(g.x,2)+Math.pow(g.y,2))-2*6;let i=Math.atan2(g.y,g.x);i>Math.PI/2&&(i=-(Math.PI-i)),i<-Math.PI/2&&(i=-(-Math.PI-i));const j=`${a.value}`;b.font="2px Sans-Serif";const k=Math.min(4,h/b.measureText(j).width);b.font=`${k}px Sans-Serif`;const l=b.measureText(j).width,m=[l,k].map(a=>a+.2*k);b.save(),b.translate(f.x,f.y),b.rotate(i),b.fillStyle="rgba(255, 255, 255, 0.8)",b.fillRect(-m[0]/2,-m[1]/2,...m),b.textAlign="center",b.textBaseline="middle",b.fillStyle="#000",b.fillText(j,0,0),b.restore()},getColor=(a,b)=>b.has(a)?"red":"#3082b9";